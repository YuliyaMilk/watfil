[{"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\Films\\Films.jsx":"2","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\MainPage\\Content\\Content.jsx":"3","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\MainPage\\Header\\Header.jsx":"4","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\UI\\Input\\Input.jsx":"5","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\brandname\\BrandName.jsx":"6","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\UI\\Card\\Card.jsx":"7","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\Auth\\Auth.jsx":"8","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\Serials\\Serials.jsx":"9","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\menu\\Menu.jsx":"10","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\Favorite\\Favorite.jsx":"11","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\MainPage\\MainPage.jsx":"12","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\filter\\Filter.jsx":"13","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\App.js":"14","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\profileHeader\\ProfileHeader.jsx":"15","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\reportWebVitals.js":"16","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\FilmInfo\\FilmInfo.jsx":"17"},{"size":517,"mtime":1606912671032,"results":"18","hashOfConfig":"19"},{"size":4192,"mtime":1607176807775,"results":"20","hashOfConfig":"19"},{"size":291,"mtime":1606912671017,"results":"21","hashOfConfig":"19"},{"size":1402,"mtime":1607181782663,"results":"22","hashOfConfig":"19"},{"size":918,"mtime":1606912670891,"results":"23","hashOfConfig":"19"},{"size":173,"mtime":1606912670907,"results":"24","hashOfConfig":"19"},{"size":1586,"mtime":1607099720275,"results":"25","hashOfConfig":"19"},{"size":4019,"mtime":1607016106229,"results":"26","hashOfConfig":"19"},{"size":4310,"mtime":1607176805510,"results":"27","hashOfConfig":"19"},{"size":604,"mtime":1606940639493,"results":"28","hashOfConfig":"19"},{"size":2764,"mtime":1607176914343,"results":"29","hashOfConfig":"19"},{"size":442,"mtime":1607007022225,"results":"30","hashOfConfig":"19"},{"size":2340,"mtime":1606912670907,"results":"31","hashOfConfig":"19"},{"size":2040,"mtime":1607098040999,"results":"32","hashOfConfig":"19"},{"size":441,"mtime":1607095692697,"results":"33","hashOfConfig":"19"},{"size":375,"mtime":1606912671032,"results":"34","hashOfConfig":"19"},{"size":4070,"mtime":1607182072601,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"13p1zhd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\index.js",[],["77","78"],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\Films\\Films.jsx",["79","80"],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\MainPage\\Content\\Content.jsx",[],["81","82"],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\MainPage\\Header\\Header.jsx",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\UI\\Input\\Input.jsx",[],["83","84"],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\brandname\\BrandName.jsx",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\UI\\Card\\Card.jsx",["85"],"import { Link } from \"react-router-dom\";\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={classes.Card} style = {props.style}>\r\n      <div className={classes.Image}>\r\n        <img\r\n          src={props.poster}\r\n          style={{ height: \"100%\" }}\r\n        ></img>\r\n      </div>\r\n      <div className={classes.Information}>\r\n        <div className={classes.Title} style = {{'fontSize': props.titleFont}}>\r\n          {props.title}\r\n          <div onClick = {() => {\r\n              if(props.deleteFavorite){\r\n                props.deleteFavorite(props.id, props.isMovie)\r\n              }\r\n              else {\r\n                props.addFavorite(props.id, !props.favorite)\r\n              }\r\n            }\r\n            }>\r\n            {props.favorite ? (\r\n              <i className=\"fa fa-star\" aria-hidden=\"true\" style = {{'color': '#ffda00'}}></i>\r\n            ) : (\r\n              <i className=\"fa fa-star-o\" aria-hidden=\"true\"></i>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={classes.Description} style = {{'fontSize': props.descriptionFont}}>{props.overview}</div>\r\n        <Link to = {{\r\n          pathname: '/' + props.id,\r\n          state: {\r\n            isMovie: props.isMovie,\r\n            id: props.id\r\n          }\r\n        }} \r\n         style={{ textDecoration: 'none', color: 'white', height: '20%', width: '100px' }}>\r\n          <div className={classes.About}>\r\n            Подробнее\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\Auth\\Auth.jsx",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\Serials\\Serials.jsx",["86","87"],"import classes from \"./Serials.module.css\";\r\nimport React from \"react\";\r\nimport Card from \"../../components/UI/Card/Card\";\r\nimport Filter from \"../../components/filter/Filter\";\r\nimport Axios from \"axios\";\r\n\r\nclass Serials extends React.Component {\r\n  state = {\r\n    serials: [],\r\n    genres: [],\r\n    favorites: [],\r\n  };\r\n\r\n  _isMounted = false;\r\n\r\n  addGenre = async (id) => {\r\n    this._isMounted &&\r\n      (await this.setState({\r\n        genres: [...this.state.genres, id],\r\n      }));\r\n  };\r\n\r\n  deleteGenre = async (id) => {\r\n    let newGenres = this.state.genres.slice();\r\n    newGenres.splice(this.state.genres.indexOf(id), 1);\r\n    this._isMounted &&\r\n      (await this.setState({\r\n        genres: newGenres,\r\n      }));\r\n  };\r\n\r\n  addFavorite = async (favoriteId, isFav) => {\r\n    if (isFav) {\r\n      let response = this._isMounted && await Axios.post(\r\n        \"https://km0lr02nsg.execute-api.us-east-1.amazonaws.com/user/addfavorite\",\r\n        {\r\n          email: localStorage.getItem(\"email\"),\r\n          movie_id: favoriteId,\r\n          movie: false,\r\n        }\r\n      );\r\n      response = JSON.parse(response.data);\r\n      if (response.status === \"success\") {\r\n        this.setState({\r\n          favorites: [...this.state.favorites, favoriteId],\r\n        });\r\n      }\r\n    } else {\r\n      let response = this._isMounted && await Axios.post(\r\n        \"https://km0lr02nsg.execute-api.us-east-1.amazonaws.com/user/deletefavorite\",\r\n        {\r\n          email: localStorage.getItem(\"email\"),\r\n          movie_id: favoriteId,\r\n          movie: false,\r\n        }\r\n      );\r\n      response = JSON.parse(response.data);\r\n      if (response.status === \"success\") {\r\n        let newFav = this.state.favorites.slice();\r\n        newFav.splice(this.state.favorites.indexOf(favoriteId), 1);\r\n        this._isMounted && this.setState({\r\n          favorites: newFav,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this._isMounted = true;\r\n    if (this._isMounted) {\r\n      for (let i of [1, 2, 3]) {\r\n        const res = (\r\n          await Axios.get(\r\n            \"https://api.themoviedb.org/3/tv/popular?api_key=623a2eda649fb02dee401196f0a282c9&language=ru&page=\" +\r\n              i\r\n          )\r\n        ).data.results;\r\n        this._isMounted && this.setState({\r\n          serials: [...this.state.serials, ...res],\r\n        });\r\n      }\r\n\r\n      let fav = await Axios.get(\r\n        \"https://km0lr02nsg.execute-api.us-east-1.amazonaws.com/user/fetchfavorites\"\r\n      );\r\n      fav = JSON.parse(fav.data);\r\n      if (fav.status === \"success\") {\r\n        let curFav = [];\r\n        fav.data.map((item) => {\r\n          if (\r\n            item.user_primary === localStorage.getItem(\"email\") &&\r\n            !item.movie\r\n          ) {\r\n            curFav.push(parseInt(item.movie_id));\r\n          }\r\n        });\r\n        this._isMounted && this.setState({\r\n          favorites: [...this.state.favorites, ...curFav],\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Serials}>\r\n        <div className={classes.SerialsCard}>\r\n          {this.state.serials.map((serial) => {\r\n            let isGood = true;\r\n            for (const genre of this.state.genres) {\r\n              if (serial.genre_ids.indexOf(genre) === -1) {\r\n                isGood = false;\r\n                break;\r\n              }\r\n            }\r\n            if (isGood) {\r\n              return (\r\n                <Card\r\n                  key={serial.id}\r\n                  id={serial.id}\r\n                  title={serial.name}\r\n                  isMovie={false}\r\n                  overview={serial.overview}\r\n                  favorite={this.state.favorites.indexOf(serial.id) !== -1}\r\n                  poster={\r\n                    \"https://image.tmdb.org/t/p/w500\" + serial.poster_path\r\n                  }\r\n                  addFavorite={this.addFavorite}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n        <div className={classes.Filters}>\r\n          <Filter\r\n            genres={this.state.genres}\r\n            addGenre={this.addGenre}\r\n            deleteGenre={this.deleteGenre}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Serials;\r\n","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\menu\\Menu.jsx",[],["88","89"],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\Favorite\\Favorite.jsx",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\MainPage\\MainPage.jsx",["90"],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\filter\\Filter.jsx",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\profileHeader\\ProfileHeader.jsx",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\FilmInfo\\FilmInfo.jsx",["91","92"],"import classes from \"./FilmInfo.module.css\";\r\nimport React from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nclass FilmInfo extends React.Component {\r\n  film = null;\r\n  videoKey = null;\r\n  state = {\r\n    film: null,\r\n    videoKey: null\r\n  };\r\n\r\n  _isMounted = false;\r\n\r\n  async componentDidMount() {\r\n    this._isMounted = true;\r\n    this.id = this.props.location.state.id;\r\n    this.isMovie = this.props.location.state.isMovie;\r\n    if (this.isMovie) {\r\n      this.film = await Axios.get(\r\n        \"https://api.themoviedb.org/3/movie/\" +\r\n          this.id +\r\n          \"?api_key=623a2eda649fb02dee401196f0a282c9&language=ru\"\r\n      );\r\n      this.videoKey = \r\n      (await Axios.get( \"https://api.themoviedb.org/3/movie/\"+this.id+\"/videos?api_key=623a2eda649fb02dee401196f0a282c9&language=en\")).data.results[0].key\r\n    \r\n    } else {\r\n      this.film = await Axios.get(\r\n        \"https://api.themoviedb.org/3/tv/\" +\r\n          this.id +\r\n          \"?api_key=623a2eda649fb02dee401196f0a282c9&language=ru\"\r\n      );\r\n      this.videoKey = \r\n    (await Axios.get( \"https://api.themoviedb.org/3/tv/\"+this.id+\"/videos?api_key=623a2eda649fb02dee401196f0a282c9&language=en\")).data.results[0].key\r\n    \r\n    }\r\n    this.film = this.film.data;\r\n    this._isMounted &&\r\n      this.setState({\r\n        film: this.film,\r\n        videoKey: this.videoKey\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    let rating = [];\r\n    if (this.state.film) {\r\n      let rate = parseInt(this.state.film.vote_average);\r\n      for (let i = 0; i < rate; ++i) {\r\n        rating.push(\r\n          <i\r\n            key={i}\r\n            className=\"fa fa-star\"\r\n            aria-hidden=\"true\"\r\n            style={{ color: \"#ffda00\" }}\r\n          ></i>\r\n        );\r\n      }\r\n      for (let i = 0; i < 10 - rate; ++i) {\r\n        rating.push(\r\n          <i\r\n            key={rate + i}\r\n            className=\"fa fa-star-o\"\r\n            aria-hidden=\"true\"\r\n            style={{ color: \"white\" }}\r\n          ></i>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className={classes.FilmInfo}>\r\n        {this.state.film ? (\r\n          <div className={classes.Page}>\r\n            <div className={classes.Image}>\r\n              <img\r\n                style={{ border: \"2px solid yellow\" }}\r\n                src={\r\n                  \"https://image.tmdb.org/t/p/w200\" +\r\n                  this.state.film.poster_path\r\n                }\r\n              ></img>\r\n            </div>\r\n            <div className={classes.TextInfo}>\r\n              <div className={classes.Title}>\r\n                {this.isMovie ? this.state.film.title : this.state.film.name}\r\n              </div>\r\n              <div className={classes.Rating}>\r\n                {rating.map((rate) => {\r\n                  return rate;\r\n                })}\r\n              </div>\r\n              <div className={classes.Description}>\r\n                {this.state.film.overview}\r\n                <div className={classes.Release}>\r\n                  Дата релиза: {this.isMovie ? this.state.film.release_date : this.state.film.first_air_date}\r\n                </div>\r\n                <div className={classes.Status}>\r\n                  Статус: {this.state.film.status}\r\n                </div>\r\n                {this.state.film.tagline ? (\r\n                  <div className={classes.Tagline}>\r\n                    Слоган: {this.state.film.tagline}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <iframe \r\n                style = {{border: \"2px solid yellow\", 'margin-top': \"20px\"}}\r\n                width=\"560\"\r\n                height=\"315\"\r\n                src={\"https://www.youtube.com/embed/\" + this.state.videoKey}\r\n                frameborder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowfullscreen\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilmInfo;\r\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":87,"column":29,"nodeType":"99","messageId":"100","endLine":87,"endColumn":31},{"ruleId":"97","severity":1,"message":"101","line":110,"column":40,"nodeType":"99","messageId":"102","endLine":110,"endColumn":42},{"ruleId":"93","replacedBy":"103"},{"ruleId":"95","replacedBy":"104"},{"ruleId":"93","replacedBy":"105"},{"ruleId":"95","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":8,"column":9,"nodeType":"109","endLine":11,"endColumn":10},{"ruleId":"97","severity":1,"message":"98","line":89,"column":29,"nodeType":"99","messageId":"100","endLine":89,"endColumn":31},{"ruleId":"97","severity":1,"message":"101","line":112,"column":44,"nodeType":"99","messageId":"102","endLine":112,"endColumn":46},{"ruleId":"93","replacedBy":"110"},{"ruleId":"95","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":15},{"ruleId":"107","severity":1,"message":"108","line":80,"column":15,"nodeType":"109","endLine":86,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":111,"column":15,"nodeType":"109","endLine":119,"endColumn":16},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["118"],["119"],["118"],["119"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["118"],["119"],"no-unused-vars","'Content' is defined but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]