[{"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\Films\\Films.jsx":"2","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\Favorite\\Favorite.jsx":"3","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\UI\\Input\\Input.jsx":"4","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\menu\\Menu.jsx":"5","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\profileHeader\\ProfileHeader.jsx":"6","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\MainPage\\MainPage.jsx":"7","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\Serials\\Serials.jsx":"8","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\UI\\Card\\Card.jsx":"9","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\MainPage\\Content\\Content.jsx":"10","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\slider\\SliderAuto.jsx":"11","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\loader\\Loader.jsx":"12","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\FilmInfo\\FilmInfo.jsx":"13"},{"size":517,"mtime":1606912671032,"results":"14","hashOfConfig":"15"},{"size":4508,"mtime":1607613223853,"results":"16","hashOfConfig":"15"},{"size":4264,"mtime":1607614071958,"results":"17","hashOfConfig":"15"},{"size":918,"mtime":1606912670891,"results":"18","hashOfConfig":"15"},{"size":604,"mtime":1606940639493,"results":"19","hashOfConfig":"15"},{"size":441,"mtime":1607095692697,"results":"20","hashOfConfig":"15"},{"size":442,"mtime":1607007022225,"results":"21","hashOfConfig":"15"},{"size":4923,"mtime":1607613204993,"results":"22","hashOfConfig":"15"},{"size":1629,"mtime":1607615763365,"results":"23","hashOfConfig":"15"},{"size":291,"mtime":1606912671017,"results":"24","hashOfConfig":"15"},{"size":2896,"mtime":1607614848265,"results":"25","hashOfConfig":"15"},{"size":155,"mtime":1607612590203,"results":"26","hashOfConfig":"15"},{"size":10078,"mtime":1607616005835,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"13p1zhd",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\index.js",[],["57","58"],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\Films\\Films.jsx",["59","60"],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\Favorite\\Favorite.jsx",["61"],"import classes from \"./Favorite.module.css\";\r\nimport React from \"react\";\r\nimport Axios from \"axios\";\r\nimport Card from \"../../components/UI/Card/Card\";\r\nimport Filter from \"../../components/filter/Filter\";\r\nimport Loader from \"../../components/loader/Loader\";\r\n\r\nclass Favorite extends React.Component {\r\n\r\n  state = {\r\n    cards: [],\r\n    filter: null,\r\n    _loading: false,\r\n  };\r\n\r\n  _isMounted = false;\r\n\r\n  addMovie = async (type) => {\r\n    this._isMounted &&\r\n      this.setState({\r\n        filter: type,\r\n      });\r\n  };\r\n\r\n  deleteMovie = async () => {\r\n    this._isMounted &&\r\n      this.setState({\r\n        filter: null,\r\n      });\r\n  };\r\n\r\n  deleteFavorite = async (favoriteId, isMovie) => {\r\n    let response = await Axios.post(\r\n      \"https://km0lr02nsg.execute-api.us-east-1.amazonaws.com/user/deletefavorite\",\r\n      {\r\n        email: localStorage.getItem(\"email\"),\r\n        movie_id: favoriteId,\r\n        movie: isMovie,\r\n      }\r\n    );\r\n    response = JSON.parse(response.data);\r\n    if (response.status === \"success\") {\r\n      let newFav = this.state.cards.slice();\r\n      for (const card of this.state.cards) {\r\n        if (card.id === favoriteId) {\r\n          newFav.splice(this.state.cards.indexOf(card), 1);\r\n          break;\r\n        }\r\n      }\r\n      this._isMounted &&\r\n        this.setState({\r\n          cards: newFav,\r\n        });\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this._isMounted = true;\r\n    this._isMounted &&\r\n      this.setState({\r\n        _loading: true,\r\n      });\r\n    let fav = await Axios.get(\r\n      \"https://km0lr02nsg.execute-api.us-east-1.amazonaws.com/user/fetchfavorites\"\r\n    );\r\n    fav = JSON.parse(fav.data);\r\n    if (fav.status === \"success\") {\r\n      let cardsArr = [];\r\n      for (const item of fav.data) {\r\n        if (item.user_primary === localStorage.getItem(\"email\")) {\r\n          let card;\r\n          if (item.movie) {\r\n            card = await Axios.get(\r\n              \"https://api.themoviedb.org/3/movie/\" +\r\n                item.movie_id +\r\n                \"?api_key=623a2eda649fb02dee401196f0a282c9&language=ru\"\r\n            );\r\n          } else {\r\n            card = await Axios.get(\r\n              \"https://api.themoviedb.org/3/tv/\" +\r\n                item.movie_id +\r\n                \"?api_key=623a2eda649fb02dee401196f0a282c9&language=ru\"\r\n            );\r\n          }\r\n          card = card.data;\r\n          cardsArr.push(card);\r\n        }\r\n      }\r\n      this._isMounted &&\r\n        this.setState({\r\n          cards: cardsArr,\r\n        });\r\n    }\r\n    this._isMounted &&\r\n      this.setState({\r\n        _loading: false,\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.FavoritePage}>\r\n        {this.state._loading ? (\r\n          <div style = {{'marginTop': '30px'}}>\r\n          <Loader />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className={classes.Filters}>\r\n              <Filter\r\n                type=\"Favorite\"\r\n                filter={this.state.filter}\r\n                addMovie={this.addMovie}\r\n                deleteMovie={this.deleteMovie}\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.Favorite}>\r\n              {this.state.cards.map((card) => {\r\n                let isMovie = card.title ? 1 : 0;\r\n                if (this.state.filter === null || this.state.filter === isMovie)\r\n                  return (\r\n                    <Card\r\n                      style={{ width: \"30%\" }}\r\n                      titleFont=\"1.3em\"\r\n                      descriptionFont=\"0.6em\"\r\n                      key={card.id}\r\n                      id={card.id}\r\n                      isMovie={card.title ? true : false}\r\n                      title={card.title ? card.title : card.name}\r\n                      overview={card.overview}\r\n                      favorite={true}\r\n                      deleteFavorite={this.deleteFavorite}\r\n                      poster={\r\n                        \"https://image.tmdb.org/t/p/w500\" + card.poster_path\r\n                      }\r\n                    />\r\n                  );\r\n              })}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Favorite;\r\n","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\UI\\Input\\Input.jsx",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\menu\\Menu.jsx",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\profileHeader\\ProfileHeader.jsx",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\MainPage\\MainPage.jsx",["62"],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\Serials\\Serials.jsx",["63","64"],"import classes from \"./Serials.module.css\";\r\nimport React from \"react\";\r\nimport Card from \"../../components/UI/Card/Card\";\r\nimport Filter from \"../../components/filter/Filter\";\r\nimport Loader from \"../../components/loader/Loader\";\r\nimport Axios from \"axios\";\r\n\r\nclass Serials extends React.Component {\r\n  state = {\r\n    serials: [],\r\n    genres: [],\r\n    favorites: [],\r\n    _loading: false,\r\n  };\r\n\r\n  _isMounted = false;\r\n\r\n  addGenre = async (id) => {\r\n    this._isMounted &&\r\n      (await this.setState({\r\n        genres: [...this.state.genres, id],\r\n      }));\r\n  };\r\n\r\n  deleteGenre = async (id) => {\r\n    let newGenres = this.state.genres.slice();\r\n    newGenres.splice(this.state.genres.indexOf(id), 1);\r\n    this._isMounted &&\r\n      (await this.setState({\r\n        genres: newGenres,\r\n      }));\r\n  };\r\n\r\n  addFavorite = async (favoriteId, isFav) => {\r\n    if (isFav) {\r\n      let response =\r\n        this._isMounted &&\r\n        (await Axios.post(\r\n          \"https://km0lr02nsg.execute-api.us-east-1.amazonaws.com/user/addfavorite\",\r\n          {\r\n            email: localStorage.getItem(\"email\"),\r\n            movie_id: favoriteId,\r\n            movie: false,\r\n          }\r\n        ));\r\n      response = JSON.parse(response.data);\r\n      if (response.status === \"success\") {\r\n        this.setState({\r\n          favorites: [...this.state.favorites, favoriteId],\r\n        });\r\n      }\r\n    } else {\r\n      let response =\r\n        this._isMounted &&\r\n        (await Axios.post(\r\n          \"https://km0lr02nsg.execute-api.us-east-1.amazonaws.com/user/deletefavorite\",\r\n          {\r\n            email: localStorage.getItem(\"email\"),\r\n            movie_id: favoriteId,\r\n            movie: false,\r\n          }\r\n        ));\r\n      response = JSON.parse(response.data);\r\n      if (response.status === \"success\") {\r\n        let newFav = this.state.favorites.slice();\r\n        newFav.splice(this.state.favorites.indexOf(favoriteId), 1);\r\n        this._isMounted &&\r\n          this.setState({\r\n            favorites: newFav,\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this._isMounted = true;\r\n    this._isMounted && this.setState({\r\n      _loading: true,\r\n    });\r\n    if (this._isMounted) {\r\n      for (let i of [1, 2, 3]) {\r\n        const res = (\r\n          await Axios.get(\r\n            \"https://api.themoviedb.org/3/tv/popular?api_key=623a2eda649fb02dee401196f0a282c9&language=ru&page=\" +\r\n              i\r\n          )\r\n        ).data.results;\r\n        this._isMounted &&\r\n          this.setState({\r\n            serials: [...this.state.serials, ...res],\r\n          });\r\n      }\r\n\r\n      let fav = await Axios.get(\r\n        \"https://km0lr02nsg.execute-api.us-east-1.amazonaws.com/user/fetchfavorites\"\r\n      );\r\n      fav = JSON.parse(fav.data);\r\n      if (fav.status === \"success\") {\r\n        let curFav = [];\r\n        fav.data.map((item) => {\r\n          if (\r\n            item.user_primary === localStorage.getItem(\"email\") &&\r\n            !item.movie\r\n          ) {\r\n            curFav.push(parseInt(item.movie_id));\r\n          }\r\n        });\r\n        this._isMounted &&\r\n          this.setState({\r\n            favorites: [...this.state.favorites, ...curFav],\r\n          });\r\n      }\r\n    }\r\n    this._isMounted && this.setState({\r\n      _loading: false,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Serials}>\r\n        {this.state._loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            <div className={classes.SerialsCard}>\r\n              {this.state.serials.map((serial) => {\r\n                let isGood = true;\r\n                for (const genre of this.state.genres) {\r\n                  if (serial.genre_ids.indexOf(genre) === -1) {\r\n                    isGood = false;\r\n                    break;\r\n                  }\r\n                }\r\n                if (isGood) {\r\n                  return (\r\n                    <Card\r\n                      key={serial.id}\r\n                      id={serial.id}\r\n                      title={serial.name}\r\n                      isMovie={false}\r\n                      overview={serial.overview}\r\n                      favorite={this.state.favorites.indexOf(serial.id) !== -1}\r\n                      poster={\r\n                        \"https://image.tmdb.org/t/p/w500\" + serial.poster_path\r\n                      }\r\n                      addFavorite={this.addFavorite}\r\n                    />\r\n                  );\r\n                }\r\n              })}\r\n            </div>\r\n            <div className={classes.Filters}>\r\n              <Filter\r\n                type=\"genres\"\r\n                genres={this.state.genres}\r\n                addGenre={this.addGenre}\r\n                deleteGenre={this.deleteGenre}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Serials;\r\n","C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\UI\\Card\\Card.jsx",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\MainPage\\Content\\Content.jsx",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\slider\\SliderAuto.jsx",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\components\\loader\\Loader.jsx",[],"C:\\Users\\HP\\Desktop\\GitHub\\watfil\\src\\containers\\FilmInfo\\FilmInfo.jsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":93,"column":29,"nodeType":"71","messageId":"72","endLine":93,"endColumn":31},{"ruleId":"69","severity":1,"message":"73","line":121,"column":40,"nodeType":"71","messageId":"74","endLine":121,"endColumn":42},{"ruleId":"69","severity":1,"message":"73","line":123,"column":44,"nodeType":"71","messageId":"74","endLine":123,"endColumn":46},{"ruleId":"75","severity":1,"message":"76","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":15},{"ruleId":"69","severity":1,"message":"70","line":100,"column":29,"nodeType":"71","messageId":"72","endLine":100,"endColumn":31},{"ruleId":"69","severity":1,"message":"73","line":131,"column":48,"nodeType":"71","messageId":"74","endLine":131,"endColumn":50},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-unused-vars","'Content' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]